{"version":3,"sources":["_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/views/chatPage/Sections/ChatCard.jsx","components/views/chatPage/chatPage.jsx","_actions/chat_actions.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","_reducers/chat_reducer.js","index.js"],"names":["auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","LandingPage","className","style","textAlign","fontSize","float","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","useState","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","userId","id","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","level","width","Item","prefix","color","placeholder","value","onChange","onBlur","border","padding","borderRadius","checked","htmlType","minWidth","disabled","href","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","name","confirmPassword","oneOf","lastname","image","moment","unix","registerUser","success","alert","errmsg","label","hasFeedback","validateStatus","onClick","Menu","SubMenu","ItemGroup","LeftMenu","mode","key","userData","status","NavBar","visible","setVisible","position","zIndex","title","placement","closable","onClose","Footer","height","display","flexDirection","alignItems","justifyContent","ChatCard","chatRightAlign","_id","chat","sender","console","log","author","avatar","src","alt","content","message","substring","length","maxWidth","controls","datetime","updatedAt","format","fromNow","chatPage","chatMessage","handleSearchChange","e","setState","target","renderCards","chats","undefined","map","onDrop","files","formData","FormData","append","Axios","header","res","url","userName","userImage","nowTime","socket","emit","submitChatMessage","preventDefault","this","messagesEnd","scrollIntoView","behavior","io","on","messageFromBackEnd","margin","overflowY","ref","el","clear","layout","getRootProps","getInputProps","Component","connect","App","fallback","paddingTop","minHeight","exact","path","component","Auth","ChatPage","LoginPage","Boolean","location","hostname","match","rootReducer","combineReducers","action","register","loginSucces","concat","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b08fdad6.chunk.js","sourcesContent":["import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\n","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\nexport const GET_CHATS = 'get_chat';\nexport const AFTER_POST_MESSAGE = 'after_post_message';","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\nexport const CHAT_SERVER = '/api/chat';","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n        let check = false;\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            \n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //console.log(response.payload);\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n            \n        }, [])\n            return (\n                <SpecificComponent {...props} user={user} />\n            )\n    }\n    return AuthenticationCheck\n}\n\n\n","import React from 'react'\nimport { FaFileVideo } from \"react-icons/fa\";\nimport {AiOutlineMessage, AiFillPicture} from 'react-icons/ai'\nfunction LandingPage() {\n    return (\n        <>\n            <div className=\"app-landing\">\n                <div style={{textAlign: \"center\"}}>\n                <AiOutlineMessage style={{ fontSize: '4rem' }}/><br />\n                <span style={{ fontSize: '2rem' }}>click on chat</span>\n                </div>\n                <div style={{textAlign: \"center\"}}>\n                <AiFillPicture style={{ fontSize: '4rem' }} /><br />\n                <span style={{ fontSize: '2rem' }}>Send Images</span>\n                </div>\n                <div style={{textAlign: \"center\"}}>\n                <FaFileVideo style={{ fontSize: '4rem' }} /><br />\n                <span style={{ fontSize: '2rem' }}>send videos</span>\n                </div>\n                \n            </div>\n            <div style={{ float: 'right' }}>Made By Ahsan Raza</div>\n        </>\n    )\n}\n\nexport default LandingPage\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                {/* <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a> */}\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","import React from 'react';\nimport { Menu } from 'antd';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n    <Menu.Item key=\"mail\">\n      <a href=\"/\">Home</a>\n    </Menu.Item>\n    <Menu.Item key=\"Chat\">\n      <a href=\"/chat\">Chat</a>\n    </Menu.Item>\n    {/* <SubMenu title={<span>Blogs</span>}>\n      <MenuItemGroup title=\"Item 1\">\n        <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\n        <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\n      </MenuItemGroup>\n      <MenuItemGroup title=\"Item 2\">\n        <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\n        <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\n      </MenuItemGroup>\n    </SubMenu> */}\n  </Menu>\n  )\n}\n\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Menu } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../Config';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n  const user = useSelector(state => state.user)\n\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then(response => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert('Log Out Failed')\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a href=\"/login\">Signin</a>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"/register\">Signup</a>\n        </Menu.Item>\n      </Menu>\n    )\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>Logout</a>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n}\n\nexport default withRouter(RightMenu);\n\n","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">Logo</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\nimport {Icon} from 'antd';\n\nfunction Footer() {\n    return (\n        <div style={{\n            height: '80px', display: 'flex',\n            flexDirection: 'column', alignItems: 'center',\n            justifyContent: 'center', fontSize:'1rem'\n        }}>\n           <p> Happy Coding  <Icon type=\"smile\" /></p>\n        </div>\n    )\n}\n\nexport default Footer\n","import React from \"react\";\r\nimport moment from 'moment';\r\nimport { Comment, Tooltip, Avatar } from 'antd';\r\n\r\nfunction ChatCard(props) {\r\n    //console.log(props);\r\n    const chatRightAlign = props.user._id === props.chat.sender._id;\r\n    console.log(chatRightAlign);\r\n    \r\n    return (\r\n        <div style={{ width: '100%', display: 'flex', justifyContent: chatRightAlign?'flex-end':'flex-start'}}>\r\n            <Comment\r\n                author={props.chat.sender.name}\r\n                avatar={\r\n                    <Avatar\r\n                        src={props.chat.sender.image} alt={props.chat.sender.name}\r\n                    />\r\n                }\r\n                content={\r\n                    props.chat.message.substring(0, 7) === \"uploads\" ?\r\n                        // this will be either video or image \r\n\r\n                        props.chat.message.substring(props.chat.message.length - 3, props.chat.message.length) === 'mp4' ?\r\n                            <video\r\n                                style={{ maxWidth: '300px' }}\r\n                                //src={`http://localhost:5000/${props.chat.message}`}\r\n                                src={`https://secure-dusk-44145.herokuapp.com/${props.chat.message}`}\r\n                                alt=\"video\"\r\n                                type=\"video/mp4\" controls\r\n                            />\r\n                            :\r\n                            <img\r\n                                style={{ maxWidth: '300px' }}\r\n                                src={`https://secure-dusk-44145.herokuapp.com/${props.chat.message}`}\r\n                                alt=\"img\"\r\n                            />\r\n                        :\r\n                        <p>\r\n                            {props.chat.message}\r\n                        </p>\r\n                }\r\n                datetime={\r\n                    <Tooltip title={moment(props.chat.updatedAt).format('YYYY-MM-DD HH:mm:ss')}>\r\n                        <span>{moment(props.chat.updatedAt).fromNow()}</span>\r\n                    </Tooltip>\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatCard;","import React, { Component } from 'react';\r\nimport {Form, Icon, Button, Row, Col, Input} from 'antd';\r\nimport io  from 'socket.io-client';\r\nimport {connect } from 'react-redux'\r\nimport moment from 'moment';\r\nimport {getChats, afterPostMessage} from '../../../_actions/chat_actions'\r\nimport ChatCard from './Sections/ChatCard'\r\nimport Dropzone from 'react-dropzone'\r\nimport Axios from 'axios';\r\n\r\n\r\nclass chatPage extends Component {\r\n    state={\r\n        chatMessage: \"\",\r\n    }\r\n    componentDidUpdate(){\r\n        this.messagesEnd.scrollIntoView({behavior: 'smooth'})\r\n    }\r\n    componentDidMount(){\r\n        let server=\"https://secure-dusk-44145.herokuapp.com/\";\r\n        this.socket = io(server)\r\n        this.props.dispatch(getChats())\r\n        this.socket.on(\"Output Chat Message\", messageFromBackEnd=>{\r\n            //console.log(messageFromBackEnd);\r\n            this.props.dispatch(afterPostMessage(messageFromBackEnd))\r\n        })\r\n    }\r\n\r\n    handleSearchChange = (e)=>{\r\n        this.setState({\r\n            chatMessage: e.target.value\r\n        })\r\n    }\r\n\r\n    renderCards = () => {\r\n        //console.log(this.props.user);\r\n        console.log(this.props.chats)\r\n        //console.log(this.props.chats.chats);\r\n        if(this.props.chats.chats){\r\n            if(this.props.chats.chats.isAuth !== undefined)\r\n                return;\r\n            return this.props.chats.chats.map((chat)=> \r\n                <ChatCard key={chat._id} chat={chat} user={this.props.user.userData}/> \r\n            )\r\n        }else{\r\n            return;\r\n        }\r\n        \r\n    }\r\n\r\n    onDrop = (files) =>{\r\n        console.log(files);\r\n        let formData = new FormData;\r\n        const config = {\r\n            header: {'content-type': 'multipart/form-data'}\r\n        }\r\n\r\n        formData.append(\"file\", files[0])\r\n\r\n        Axios.post('api/chat/uploadFiles', formData, config)\r\n        .then(res=>{\r\n            if(res.data.success){\r\n                let chatMessage = res.data.url;\r\n                let userId = this.props.user.userData._id;\r\n                let userName = this.props.user.userData.name;\r\n                let userImage = this.props.user.userData.image;\r\n                let nowTime = moment();\r\n                let type = 'VideoOrImage';\r\n\r\n                this.socket.emit(\"Input Chat Message\", {\r\n                    chatMessage,\r\n                    userId,\r\n                    userName,\r\n                    userImage,\r\n                    nowTime,\r\n                    type\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    submitChatMessage = (e) => {\r\n        e.preventDefault();\r\n        let chatMessage = this.state.chatMessage;\r\n        let userId = this.props.user.userData._id;\r\n        let userName = this.props.user.userData.name;\r\n        let userImage = this.props.user.userData.image;\r\n        let nowTime = moment();\r\n        let type = 'text';\r\n        this.socket.emit(\"Input Chat Message\", {\r\n            chatMessage,\r\n            userId,\r\n            userName,\r\n            userImage,\r\n            nowTime,\r\n            type\r\n        })\r\n        this.setState({chatMessage: \"\"})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div>\r\n                <p style={{fontSize: '2rem', textAlign: 'center', }}>Real Time Chat</p>\r\n            </div>\r\n            <div style={{maxWidth: '800px', margin: '0 auto'}}>\r\n                <div className=\"infinite-container\" style={{height:\"500px\", overflowY:\"scroll\"}}>\r\n                    {\r\n                        \r\n                        this.props.chats && (\r\n                        <div>{this.renderCards()}</div>\r\n                        )\r\n                    }\r\n                    <div\r\n                        ref={el=>{\r\n                                this.messagesEnd = el;\r\n                        }}\r\n                        style={{float: 'left', clear: 'both'}}\r\n                    />\r\n                </div>\r\n                <Row>\r\n                    <Form layout=\"inline\" margin='10px auto' onSubmit={this.submitChatMessage}>\r\n                        <Col span={18}>\r\n                            <Input \r\n                                id='message'\r\n                                prefix={<Icon type=\"message\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                                placeholder=\"Let's get Talking\"\r\n                                type=\"text\"\r\n                                value={this.state.chatMessage}\r\n                                onChange={this.handleSearchChange}\r\n                            />\r\n                        </Col>\r\n                        <Col span={3}>\r\n                            <Dropzone onDrop={this.onDrop}>\r\n                                {({getRootProps, getInputProps}) => (\r\n                                    <section>\r\n                                    <div {...getRootProps()}>\r\n                                        <input {...getInputProps()} />\r\n                                        <Button>\r\n                                            <Icon type=\"upload\" />\r\n                                        </Button>\r\n                                    </div>\r\n                                    </section>\r\n                                )}\r\n                            </Dropzone>\r\n                        </Col>\r\n                        <Col span={3}>\r\n                            <Button type=\"primary\" onClick={this.submitChatMessage} style={{width: '100%'}} htmlType=\"submit\">\r\n                                <Icon type=\"enter\" />\r\n                            </Button>\r\n                        </Col>\r\n                    </Form>\r\n                </Row>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        chats: state.chat\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(chatPage);","import axios from 'axios';\r\nimport {\r\n    GET_CHATS,\r\n    AFTER_POST_MESSAGE\r\n} from './types';\r\nimport { CHAT_SERVER } from '../components/Config.js';\r\n\r\n\r\nexport function getChats(){\r\n    const request = axios.get(`${CHAT_SERVER}/getChats`)\r\n        .then(res=>res.data);\r\n\r\n    return {\r\n        type: GET_CHATS,\r\n        payload: request\r\n    }\r\n}\r\n\r\n\r\nexport function afterPostMessage(data){\r\n    return{\r\n        type: AFTER_POST_MESSAGE,\r\n        payload: data\r\n    }\r\n}","import React, { Suspense } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\"\nimport ChatPage from './views/chatPage/chatPage'\n//null   Anyone Can go inside\n//true   only logged in user can go inside\n//false  logged in user can't go inside\n\nfunction App() {\n  return ( \n    <Suspense fallback={(<div>Loading...</div>)}>\n      <NavBar />\n      <div style={{ paddingTop: '69px', minHeight: 'calc(100vh - 80px)' }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n          <Route exact path=\"/chat\" component={Auth(ChatPage, true)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\nimport chat from './chat_reducer';\nconst rootReducer = combineReducers({\n    user,\n    chat\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","import {\r\n    GET_CHATS, AFTER_POST_MESSAGE\r\n} from '../_actions/types';\r\n \r\n\r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case GET_CHATS:\r\n            return {...state, chats: action.payload }\r\n\r\n        case AFTER_POST_MESSAGE:\r\n            return {...state, chats:state.chats.concat(action.payload)}\r\n        default:\r\n            return state;\r\n    }\r\n}","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}